// Generated by purs version 0.11.5
"use strict";
var Control_Applicative = require("../Control.Applicative");
var Control_Bind = require("../Control.Bind");
var Control_Monad_Eff = require("../Control.Monad.Eff");
var Control_Monad_Eff_Random = require("../Control.Monad.Eff.Random");
var Control_Monad_State = require("../Control.Monad.State");
var Data_Function = require("../Data.Function");
var Data_Functor = require("../Data.Functor");
var Data_Tuple = require("../Data.Tuple");
var Prelude = require("../Prelude");
var Signal = require("../Signal");
var Test_QuickCheck = require("../Test.QuickCheck");
var Test_QuickCheck_Gen = require("../Test.QuickCheck.Gen");
var Test_QuickCheck_LCG = require("../Test.QuickCheck.LCG");
var foldpM = function (run) {
    return function (st$prime) {
        return function (f) {
            return function (st) {
                return function (sig) {
                    return Data_Functor.map(Signal.functorSignal)(Data_Tuple.fst)(Signal.foldp(function (xa) {
                        return function (v) {
                            return Data_Tuple.uncurry(run)(new Data_Tuple.Tuple(f(xa)(v.value0), v.value1));
                        };
                    })(new Data_Tuple.Tuple(st, st$prime))(sig));
                };
            };
        };
    };
};
var foldpR$prime = foldpM(Test_QuickCheck_Gen.runGen);
var foldpR = function (f) {
    return function (st) {
        return function (sig) {
            return function __do() {
                var v = Test_QuickCheck_LCG.randomSeed();
                return foldpR$prime({
                    newSeed: v, 
                    size: 536870911
                })(f)(st)(sig);
            };
        };
    };
};
var evalGenD = function (g) {
    return function __do() {
        var v = Test_QuickCheck_LCG.randomSeed();
        return Test_QuickCheck_Gen.evalGen(g)({
            newSeed: v, 
            size: 536870911
        });
    };
};
module.exports = {
    evalGenD: evalGenD, 
    foldpM: foldpM, 
    foldpR: foldpR, 
    "foldpR'": foldpR$prime
};
